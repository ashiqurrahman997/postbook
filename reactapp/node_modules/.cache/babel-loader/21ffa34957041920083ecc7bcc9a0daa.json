{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eh5i0\\\\Desktop\\\\ReactProject\\\\reactapp\\\\src\\\\Pages\\\\MyProfile.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const history = useHistory();\n  const id = useParams().id;\n  const [posts, setPost] = useState([]);\n  const [user, setUser] = useState([]);\n  const [pageNumer, setPageNumer] = useState(0);\n  const userPerPage = 3;\n  const pageCount = Math.ceil(posts.length / userPerPage);\n  const firstPostIndex = userPerPage * pageNumer;\n  useEffect(() => {\n    Axios.get(\"https://jsonplaceholder.typicode.com/users/\" + id).then(res => {\n      console.log(res.data.ad);\n      setUser(res.data);\n    }).catch(err => console.log(err));\n    Axios.get(\"https://jsonplaceholder.typicode.com/posts?userId=\" + id).then(res => {\n      setPost(res.data);\n    }).catch(err => console.log(err));\n    console.log(id);\n  }, []);\n\n  function DeletePost(id) {\n    Axios.delete('https://jsonplaceholder.typicode.com/posts/' + id).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n    alert('Sucessfully Delete.\\n Check Network Status');\n  }\n\n  function Update(id) {\n    history.push('/updateform?id=' + id);\n  }\n\n  const changePage = ({\n    selected\n  }) => {\n    setPageNumer(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: [\" \", user.name, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"center\",\n        children: \"All Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        type: \"1\",\n        children: posts.slice(firstPostIndex, firstPostIndex + userPerPage).map((post, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"  Title : \", post.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Body: \", post.body]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => DeletePost(post.id),\n                children: \" Delete \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => Update(post.id),\n                children: \" UpDate  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationStyle\",\n      activeClassName: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"iAoEEyM8yibpKJWnvKu9Kfih7zU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Profile;\n;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/eh5i0/Desktop/ReactProject/reactapp/src/Pages/MyProfile.js"],"names":["React","useState","useEffect","Axios","ReactPaginate","useParams","useHistory","Profile","history","id","posts","setPost","user","setUser","pageNumer","setPageNumer","userPerPage","pageCount","Math","ceil","length","firstPostIndex","get","then","res","console","log","data","ad","catch","err","DeletePost","delete","alert","Update","push","changePage","selected","name","email","slice","map","post","index","title","body"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAIA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAMG,EAAE,GAACJ,SAAS,GAAGI,EAArB;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAMe,WAAW,GAAE,CAAnB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUT,KAAK,CAACU,MAAN,GAAeJ,WAAzB,CAAlB;AACA,QAAMK,cAAc,GAAGL,WAAW,GAAGF,SAArC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACmB,GAAN,CAAU,gDAA8Cb,EAAxD,EACKc,IADL,CACUC,GAAG,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,EAArB;AACFf,MAAAA,OAAO,CAACW,GAAG,CAACG,IAAL,CAAP;AACH,KAJL,EAKKE,KALL,CAKWC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CALlB;AAOI3B,IAAAA,KAAK,CAACmB,GAAN,CAAU,uDAAqDb,EAA/D,EACCc,IADD,CACMC,GAAG,IAAI;AACTb,MAAAA,OAAO,CAACa,GAAG,CAACG,IAAL,CAAP;AAEH,KAJD,EAKCE,KALD,CAKOC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CALd;AAMAL,IAAAA,OAAO,CAACC,GAAR,CAAYjB,EAAZ;AACP,GAfQ,EAeN,EAfM,CAAT;;AAiBA,WAASsB,UAAT,CAAqBtB,EAArB,EAAwB;AACpBN,IAAAA,KAAK,CAAC6B,MAAN,CAAa,gDAA8CvB,EAA3D,EACDc,IADC,CACIC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,KAHC,EAIDE,KAJC,CAIKC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAJZ;AAKHG,IAAAA,KAAK,CAAC,4CAAD,CAAL;AACF;;AAED,WAASC,MAAT,CAAiBzB,EAAjB,EAAoB;AAChBD,IAAAA,OAAO,CAAC2B,IAAR,CAAa,oBAAoB1B,EAAjC;AACH;;AAEC,QAAM2B,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACjCtB,IAAAA,YAAY,CAACsB,QAAD,CAAZ;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,sBAAyBzB,IAAI,CAAC0B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA,gBAAuB1B,IAAI,CAAC2B;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFP,eAIO;AAAA;AAAA;AAAA;AAAA,YAJP,eAKI;AAAA,8BACK;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEI;AAAI,QAAA,IAAI,EAAC,GAAT;AAAA,kBAGM7B,KAAK,CAAC8B,KAAN,CAAYnB,cAAZ,EAA2BA,cAAc,GAACL,WAA1C,EAAuDyB,GAAvD,CAA2D,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1E,8BACK;AAAA,mCACG;AAAA,sCACI;AAAA,yCAAeD,IAAI,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,qCAAUF,IAAI,CAACG,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAQ,gBAAA,OAAO,EAAE,MAAId,UAAU,CAACW,IAAI,CAACjC,EAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAIK;AAAQ,gBAAA,OAAO,EAAE,MAAIyB,MAAM,CAACQ,IAAI,CAACjC,EAAN,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJL,eAKI;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,aAASkC,KAAT;AAAA;AAAA;AAAA;AAAA,kBADL;AAWH,SAZC;AAHN;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eA+BI,QAAC,aAAD;AACI,MAAA,SAAS,EAAE1B,SADf;AAEK,MAAA,YAAY,EAAEmB,UAFnB;AAGI,MAAA,kBAAkB,EAAE,iBAHxB;AAII,MAAA,eAAe,EAAE;AAJrB;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCE;;GApFG7B,O;UACWD,U,EACPD,S;;;KAFJE,O;AAoFH;AAEN,eAAeA,OAAf","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Profile() {\r\n    const history = useHistory()\r\n    const id=useParams().id\r\n    const [posts, setPost] = useState([]);\r\n    const [user, setUser] = useState([]);   \r\n    const [pageNumer, setPageNumer] = useState(0);\r\n   \r\n    const userPerPage= 3;\r\n    const pageCount = Math.ceil(posts.length / userPerPage) \r\n    const firstPostIndex = userPerPage * pageNumer;\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"https://jsonplaceholder.typicode.com/users/\"+id)\r\n            .then(res => {\r\n                  console.log(res.data.ad);\r\n                setUser(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n            Axios.get(\"https://jsonplaceholder.typicode.com/posts?userId=\"+id)\r\n            .then(res => {            \r\n                setPost(res.data)\r\n               \r\n            })\r\n            .catch(err => console.log(err))\r\n            console.log(id);\r\n    }, []);\r\n\r\n    function DeletePost (id){\r\n        Axios.delete('https://jsonplaceholder.typicode.com/posts/'+id)\r\n      .then(res => {\r\n          console.log(res.data);\r\n      })\r\n      .catch(err => console.log(err))\r\n     alert('Sucessfully Delete.\\n Check Network Status');\r\n  }\r\n  \r\n  function Update (id){\r\n      history.push('/updateform?id=' + id);\r\n  }\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumer(selected);\r\n    }\r\n    return (\r\n        <div >\r\n            <h1 className='center'> {user.name}  </h1>\r\n               <p className='center'>{user.email}</p>            \r\n              \r\n               <hr/>\r\n            <div >\r\n                 <h1 className='center'>All Posts</h1>\r\n                <ul type=\"1\">\r\n\r\n                      {                   \r\n                      posts.slice(firstPostIndex,firstPostIndex+userPerPage).map((post, index) => {\r\n                        return(                          \r\n                             <li key={index}>\r\n                                <div >\r\n                                    <h3>  Title : {post.title} </h3>\r\n                                    <p>Body: {post.body}</p>\r\n                                    <button onClick={()=>DeletePost(post.id)}> Delete </button>\r\n                                     <button onClick={()=>Update(post.id)} > UpDate  </button>\r\n                                    <hr></hr>\r\n                                </div>\r\n                            </li>\r\n                            )\r\n                    }) \r\n                  \r\n                    }                \r\n                  \r\n                  \r\n                </ul>\r\n        \r\n            </div>\r\n          \r\n            <ReactPaginate\r\n                pageCount={pageCount}\r\n                 onPageChange={changePage}\r\n                containerClassName={\"paginationStyle\"}\r\n                activeClassName={\"active\"}\r\n            />\r\n        </div>\r\n        \r\n    )};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eh5i0\\\\Desktop\\\\ReactProject\\\\reactapp\\\\src\\\\Pages\\\\AllUsers.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useMemo } from 'react';\nimport Axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState('');\n  const [emailName, setemailName] = useState('');\n  const [pageNumer, setPageNumer] = useState(0);\n  const [userPerPage, setUserperPage] = useState(5);\n  const firstUserIndex = userPerPage * pageNumer;\n  const pageCount = Math.ceil(users.length / userPerPage);\n  useEffect(() => {\n    Axios.get('https://jsonplaceholder.typicode.com/users').then(res => {\n      setUsers(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const changePage = ({\n    selected\n  }) => {\n    setPageNumer(selected);\n  };\n\n  const Asc = event => {\n    event.preventDefault();\n    setUsers(users.sort((a, b) => {\n      return a.name.localeCompare(b.name);\n    }));\n    console.log(users);\n  };\n\n  const setPageSize = e => {\n    e.preventDefault();\n    const x = document.getElementById('ok').value;\n\n    if (x != '') {\n      setUserperPage(x);\n      const pageCount = Math.ceil(users.length / userPerPage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"center\",\n      children: \" All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: setPageSize,\n        children: \"Users per Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"myTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Name  \", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: event => setUserName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: Asc,\n              children: \"Asc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Email \", /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: event => setemailName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), display]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationStyle\",\n      activeClassName: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"dR7+0JEyX22WVgkuuRMkGhMDdms=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/eh5i0/Desktop/ReactProject/reactapp/src/Pages/AllUsers.js"],"names":["React","useEffect","useState","useMemo","Axios","ReactPaginate","Users","users","setUsers","userName","setUserName","emailName","setemailName","pageNumer","setPageNumer","userPerPage","setUserperPage","firstUserIndex","pageCount","Math","ceil","length","get","then","res","data","catch","err","console","log","changePage","selected","Asc","event","preventDefault","sort","a","b","name","localeCompare","setPageSize","e","x","document","getElementById","value","target","display"],"mappings":"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","sourcesContent":["import { React, useEffect, useState ,useMemo} from 'react';\r\nimport Axios from 'axios'\r\nimport ReactPaginate from 'react-paginate'\r\nimport '../style.css'\r\n\r\n\r\nfunction Users() {\r\n    \r\n    const [users, setUsers] = useState([]);\r\n    const [userName, setUserName] = useState('');\r\n    const [emailName, setemailName] = useState('');\r\n    const [pageNumer, setPageNumer] = useState(0);\r\n    const [ userPerPage,setUserperPage] =useState(5);\r\n    const firstUserIndex = userPerPage * pageNumer;\r\n    const pageCount = Math.ceil(users.length / userPerPage)\r\n\r\n    useEffect(() => {\r\n        Axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then(res => {\r\n                setUsers(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }, []);\r\n\r\n\r\n    \r\n   \r\n   \r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumer(selected);      \r\n    }\r\n\r\n    \r\n     const Asc=(event)=>{ \r\n       event.preventDefault();    \r\n      setUsers(users.sort((a,b)=>{return a.name.localeCompare(b.name)})); \r\n      console.log(users)  \r\n   \r\n       \r\n     }\r\n       const setPageSize=(e)=>\r\n       {\r\n          e.preventDefault();\r\n           const x=document.getElementById('ok').value\r\n           if(x!='')\r\n           {\r\n            setUserperPage(x)\r\n            const pageCount = Math.ceil(users.length / userPerPage)\r\n           }\r\n       }\r\n   \r\n    return (\r\n        <div>\r\n            <h1 id='center' > All Users</h1>\r\n            <form>\r\n            <input id='ok'  />\r\n            <button   type=\"submit\" onClick={setPageSize}>Users per Page</button>\r\n            </form>          \r\n      \r\n            <table id=\"myTable\">\r\n                <tbody>\r\n                    <tr>                      \r\n                        <th>Name  <input onChange={event => setUserName(event.target.value)}/> \r\n                         <button onClick={Asc}>Asc</button></th>\r\n                        <th>Email <input onChange={event => setemailName(event.target.value)}/></th>\r\n                        <th>Website</th>\r\n\r\n                    </tr>\r\n\r\n                    {\r\n                    display                   \r\n                    }\r\n                    \r\n\r\n                </tbody>\r\n            </table>\r\n\r\n             \r\n            <ReactPaginate\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationStyle\"}\r\n                activeClassName={\"active\"}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}